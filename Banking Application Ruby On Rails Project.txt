Banking Application Ruby On Rails Project

1.At first create the project by run this command in Command prompt with ruby on rails:
=>cd C:\Users\user\RubymineProjects
=>rails new bankapp
=>cd bankapp


Now Creating a Rails model:
rails generate model ModelName attribute:type
model names are singular.

=>rails g model Client first_name:string last_name:string middle_name:string client_number:string
=>rake db:migrate


Again Creating a Rails model:
=>rails g model BankAccount client:references balance:decimal account_number:string
=>rake db:migrate


Again Creating a Rails model:
=>rails g model AccountTransaction amount:decimal transaction_type:string bank_account:references
=>rake db:migrate



2.Now added this code in "GEMFILE":
https://rubygems.org/gems/bootstrap-sass/versions/3.3.7
gem 'bootstrap-sass', '~> 3.3', '>= 3.3.7'

We Don't Use this gem file so remove the turbolinks From views>layouts.application.html.erb:
gem 'turbolinks', '~> 5'


https://rubygems.org/gems/haml/versions/5.0.4
gem 'haml', '~> 5.0', '>= 5.0.4'


Now run this command in cmd:
=>bundle



Added this code in models>client.rb:
[client must be give his name and the client_number must be unique.Also before saving database the change the name in uppercase]
class Client < ApplicationRecord
	validates :first_name, presence: true
	validates :last_name, presence: true
	validates :middle_name, presence: true
	validates :client_number, presence: true, uniqueness: true

	before_save :format_name

	def format_name
		self.first_name  = self.first_name.upcase
		self.last_name   = self.last_name.upcase
		self.middle_name = self.middle_name.upcase
	end

	def to_s
		"#{last_name}, #{first_name} #{middle_name}"
	end 

end




Added this code in models>bank_ccount.rb:


class BankAccount < ApplicationRecord
  belongs_to :client

  validates :client, presence: true
  validates :account_number, presence: true, uniqueness: true
  validates :balance, presence: true, numericality: true

  before_validation :load_defaults

  def load_defaults
  	if self.new_record?
  		self.balance = 0.00
  end

  def to_s
  	account_number
  end
end



Also Add This line in models>client.rb:
[client can have many bank account]

	has_many :bank_accounts

	
	
	
	
	
Added this code in models>account_transaction.rb:

class AccountTransaction < ApplicationRecord
  belongs_to :bank_account

  TRANSACTION_TYPES = ["withdraw", "deposit"]

  validates :bank_account, presence: true
  validates :amount, presence:true, numericality: true
  validates :transaction_type, presence: true, inclusion: { in: TRANSACTION_TYPES}
end



We forgot to added the transaction_number in account_transactions table when created model:   
t.string "transaction_number"
For this reason,
create a migration file run this line in command prompt:
=>rails g migration add_transaction_number_to_account_transactions transaction_number:string
=>rake db:migrate



After added transaction_number in account_transactions table now added this code in account_transactions.rb:

validates :transaction_number, presence: true, uniqueness: true

  before_validation :load_defaults

  def load_defaults
  	#if a transaction occured assigned a transaction number...
  	if self.new_record?
  		self.transaction_number = SecureRandom.uuid
  end










